

 [2106.09685] LoRA: Low-Rank Adaptation of Large Language Models





























  








Skip to main content






We gratefully acknowledge support from the Simons Foundation, member institutions, and all contributors.
Donate





 > cs > arXiv:2106.09685
  





Help | Advanced Search




All fields
Title
Author
Abstract
Comments
Journal reference
ACM classification
MSC classification
Report number
arXiv identifier
DOI
ORCID
arXiv author ID
Help pages
Full text




Search















open search






GO



open navigation menu


quick links

Login
Help Pages
About












Computer Science > Computation and Language


arXiv:2106.09685 (cs)
    




  [Submitted on 17 Jun 2021 (v1), last revised 16 Oct 2021 (this version, v2)]
Title:LoRA: Low-Rank Adaptation of Large Language Models
Authors:Edward J. Hu, Yelong Shen, Phillip Wallis, Zeyuan Allen-Zhu, Yuanzhi Li, Shean Wang, Lu Wang, Weizhu Chen View a PDF of the paper titled LoRA: Low-Rank Adaptation of Large Language Models, by Edward J. Hu and 7 other authors
View PDF

Abstract:An important paradigm of natural language processing consists of large-scale pre-training on general domain data and adaptation to particular tasks or domains. As we pre-train larger models, full fine-tuning, which retrains all model parameters, becomes less feasible. Using GPT-3 175B as an example -- deploying independent instances of fine-tuned models, each with 175B parameters, is prohibitively expensive. We propose Low-Rank Adaptation, or LoRA, which freezes the pre-trained model weights and injects trainable rank decomposition matrices into each layer of the Transformer architecture, greatly reducing the number of trainable parameters for downstream tasks. Compared to GPT-3 175B fine-tuned with Adam, LoRA can reduce the number of trainable parameters by 10,000 times and the GPU memory requirement by 3 times. LoRA performs on-par or better than fine-tuning in model quality on RoBERTa, DeBERTa, GPT-2, and GPT-3, despite having fewer trainable parameters, a higher training throughput, and, unlike adapters, no additional inference latency. We also provide an empirical investigation into rank-deficiency in language model adaptation, which sheds light on the efficacy of LoRA. We release a package that facilitates the integration of LoRA with PyTorch models and provide our implementations and model checkpoints for RoBERTa, DeBERTa, and GPT-2 at this https URL.
    


 
Comments:
Draft V2 includes better baselines, experiments on GLUE, and more on adapter latency


Subjects:

Computation and Language (cs.CL); Artificial Intelligence (cs.AI); Machine Learning (cs.LG)

Cite as:
arXiv:2106.09685 [cs.CL]


 
(or 
arXiv:2106.09685v2 [cs.CL] for this version)
          


 
 https://doi.org/10.48550/arXiv.2106.09685


Focus to learn more



                  arXiv-issued DOI via DataCite







Submission history From: Edward J. Hu [view email]       [v1]
        Thu, 17 Jun 2021 17:37:18 UTC (1,791 KB)
[v2]
        Sat, 16 Oct 2021 18:40:34 UTC (896 KB)



 

Full-text links:
Access Paper:


View a PDF of the paper titled LoRA: Low-Rank Adaptation of Large Language Models, by Edward J. Hu and 7 other authorsView PDFTeX SourceOther Formats
view license

 
    Current browse context: cs.CL


< prev

  |   
next >


new
 | 
recent
 | 2021-06

    Change to browse by:
    
cs
cs.AI
cs.LG




References & Citations

NASA ADSGoogle Scholar
Semantic Scholar





 12 blog links (what is this?)
        


DBLP - CS Bibliography

listing | bibtex 

Yelong ShenPhillip WallisZeyuan Allen-ZhuYuanzhi LiWeizhu Chen 

a
export BibTeX citation
Loading...




BibTeX formatted citation
×


loading...


Data provided by: 




Bookmark





 




Bibliographic Tools

Bibliographic and Citation Tools






Bibliographic Explorer Toggle



Bibliographic Explorer (What is the Explorer?)







Connected Papers Toggle



Connected Papers (What is Connected Papers?)






Litmaps Toggle



Litmaps (What is Litmaps?)







scite.ai Toggle



scite Smart Citations (What are Smart Citations?)









Code, Data, Media

Code, Data and Media Associated with this Article






alphaXiv Toggle



alphaXiv (What is alphaXiv?)







Links to Code Toggle



CatalyzeX Code Finder for Papers (What is CatalyzeX?)







DagsHub Toggle



DagsHub (What is DagsHub?)







GotitPub Toggle



Gotit.pub (What is GotitPub?)







Huggingface Toggle



Hugging Face (What is Huggingface?)







Links to Code Toggle



Papers with Code (What is Papers with Code?)







ScienceCast Toggle



ScienceCast (What is ScienceCast?)













Demos

Demos






Replicate Toggle



Replicate (What is Replicate?)







Spaces Toggle



Hugging Face Spaces (What is Spaces?)







Spaces Toggle



TXYZ.AI (What is TXYZ.AI?)








Related Papers

Recommenders and Search Tools






Link to Influence Flower



Influence Flower (What are Influence Flowers?)







Core recommender toggle



CORE Recommender (What is CORE?)





Author
Venue
Institution
Topic













        About arXivLabs
      



arXivLabs: experimental projects with community collaborators
arXivLabs is a framework that allows collaborators to develop and share new arXiv features directly on our website.
Both individuals and organizations that work with arXivLabs have embraced and accepted our values of openness, community, excellence, and user data privacy. arXiv is committed to these values and only works with partners that adhere to them.
Have an idea for a project that will add value for arXiv's community? Learn more about arXivLabs.










Which authors of this paper are endorsers? |
    Disable MathJax (What is MathJax?)
    












About
Help





contact arXivClick here to contact arXiv
 Contact


subscribe to arXiv mailingsClick here to subscribe
 Subscribe











Copyright
Privacy Policy




Web Accessibility Assistance


arXiv Operational Status 
                    Get status notifications via
                    email
                    or slack





 






